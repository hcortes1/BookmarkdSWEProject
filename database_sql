-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.authors (
  author_id integer NOT NULL DEFAULT nextval('authors_author_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  bio text,
  birth_date date,
  death_date date,
  nationality character varying,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT authors_pkey PRIMARY KEY (author_id)
);
CREATE TABLE public.books (
  book_id integer NOT NULL DEFAULT nextval('books_book_id_seq'::regclass),
  title character varying NOT NULL,
  isbn character varying UNIQUE,
  genre character varying,
  release_date date,
  description text,
  cover_url character varying,
  author_id integer,
  CONSTRAINT books_pkey PRIMARY KEY (book_id),
  CONSTRAINT books_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.authors(author_id)
);
CREATE TABLE public.bookshelf (
  shelf_id integer NOT NULL DEFAULT nextval('bookshelf_shelf_id_seq'::regclass),
  user_id integer NOT NULL,
  book_id integer NOT NULL,
  shelf_type text DEFAULT 'plan-to-read'::text CHECK (shelf_type = ANY (ARRAY['reading'::text, 'completed'::text, 'on-hold'::text, 'dropped'::text, 'plan-to-read'::text])),
  added_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT bookshelf_pkey PRIMARY KEY (shelf_id),
  CONSTRAINT bookshelf_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT bookshelf_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.chatbot_logs (
  log_id integer NOT NULL DEFAULT nextval('chatbot_logs_log_id_seq'::regclass),
  user_id integer NOT NULL,
  message text,
  response text,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT chatbot_logs_pkey PRIMARY KEY (log_id),
  CONSTRAINT chatbot_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);
CREATE TABLE public.feed (
  feed_id integer NOT NULL DEFAULT nextval('feed_feed_id_seq'::regclass),
  user_id integer NOT NULL,
  activity_type text NOT NULL CHECK (activity_type = ANY (ARRAY['review'::text, 'rating'::text, 'wishlist'::text, 'goal'::text, 'rental'::text])),
  activity_text character varying,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT feed_pkey PRIMARY KEY (feed_id),
  CONSTRAINT feed_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);
CREATE TABLE public.friend_requests (
  id integer NOT NULL DEFAULT nextval('friend_requests_id_seq'::regclass),
  sender_id integer NOT NULL,
  receiver_id integer NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'declined'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT friend_requests_pkey PRIMARY KEY (id)
);
CREATE TABLE public.friends (
  user_id integer NOT NULL,
  friend_id integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT friends_pkey PRIMARY KEY (user_id, friend_id),
  CONSTRAINT friends_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT friends_friend_id_fkey FOREIGN KEY (friend_id) REFERENCES public.users(user_id)
);
CREATE TABLE public.leaderboards (
  leaderboard_id integer NOT NULL DEFAULT nextval('leaderboards_leaderboard_id_seq'::regclass),
  user_id integer NOT NULL,
  score integer NOT NULL,
  rank_position integer,
  calculated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT leaderboards_pkey PRIMARY KEY (leaderboard_id),
  CONSTRAINT leaderboards_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);
CREATE TABLE public.moderation_reports (
  report_id integer NOT NULL DEFAULT nextval('moderation_reports_report_id_seq'::regclass),
  user_id integer NOT NULL,
  review_id integer NOT NULL,
  reason character varying,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'reviewed'::text, 'resolved'::text])),
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT moderation_reports_pkey PRIMARY KEY (report_id),
  CONSTRAINT moderation_reports_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT moderation_reports_review_id_fkey FOREIGN KEY (review_id) REFERENCES public.reviews(review_id)
);
CREATE TABLE public.reading_goals (
  goal_id integer NOT NULL DEFAULT nextval('reading_goals_goal_id_seq'::regclass),
  user_id integer NOT NULL,
  target_books integer NOT NULL,
  progress integer DEFAULT 0,
  start_date date,
  end_date date,
  reminder_enabled boolean DEFAULT false,
  CONSTRAINT reading_goals_pkey PRIMARY KEY (goal_id),
  CONSTRAINT reading_goals_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);
CREATE TABLE public.recommendations (
  rec_id integer NOT NULL DEFAULT nextval('recommendations_rec_id_seq'::regclass),
  user_id integer NOT NULL,
  book_id integer NOT NULL,
  reason character varying,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT recommendations_pkey PRIMARY KEY (rec_id),
  CONSTRAINT recommendations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT recommendations_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.rentals (
  rental_id integer NOT NULL DEFAULT nextval('rentals_rental_id_seq'::regclass),
  user_id integer NOT NULL,
  book_id integer NOT NULL,
  rental_date date NOT NULL,
  due_date date NOT NULL,
  return_date date,
  CONSTRAINT rentals_pkey PRIMARY KEY (rental_id),
  CONSTRAINT rentals_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT rentals_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.reviews (
  review_id integer NOT NULL DEFAULT nextval('reviews_review_id_seq'::regclass),
  user_id integer NOT NULL,
  book_id integer NOT NULL,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  review_text text,
  ai_filtered boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT reviews_pkey PRIMARY KEY (review_id),
  CONSTRAINT reviews_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT reviews_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.rewards (
  reward_id integer NOT NULL DEFAULT nextval('rewards_reward_id_seq'::regclass),
  user_id integer NOT NULL,
  points integer DEFAULT 0,
  level integer DEFAULT 1,
  CONSTRAINT rewards_pkey PRIMARY KEY (reward_id),
  CONSTRAINT rewards_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);
CREATE TABLE public.sponsored_books (
  sponsor_id integer NOT NULL DEFAULT nextval('sponsored_books_sponsor_id_seq'::regclass),
  book_id integer NOT NULL,
  sponsor_name character varying,
  start_date date,
  end_date date,
  CONSTRAINT sponsored_books_pkey PRIMARY KEY (sponsor_id),
  CONSTRAINT sponsored_books_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.trending (
  trend_id integer NOT NULL DEFAULT nextval('trending_trend_id_seq'::regclass),
  book_id integer NOT NULL,
  score integer NOT NULL,
  calculated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT trending_pkey PRIMARY KEY (trend_id),
  CONSTRAINT trending_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);
CREATE TABLE public.users (
  user_id integer NOT NULL DEFAULT nextval('users_user_id_seq'::regclass),
  username character varying NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE,
  password character varying NOT NULL,
  profile_image_url character varying,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  display_name character varying,
  bio text,
  favorite_authors ARRAY DEFAULT '{}'::integer[],
  favorite_books ARRAY DEFAULT '{}'::integer[],
  CONSTRAINT users_pkey PRIMARY KEY (user_id)
);
CREATE TABLE public.wishlist (
  wishlist_id integer NOT NULL DEFAULT nextval('wishlist_wishlist_id_seq'::regclass),
  user_id integer NOT NULL,
  book_id integer NOT NULL,
  alert boolean DEFAULT false,
  CONSTRAINT wishlist_pkey PRIMARY KEY (wishlist_id),
  CONSTRAINT wishlist_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(user_id),
  CONSTRAINT wishlist_book_id_fkey FOREIGN KEY (book_id) REFERENCES public.books(book_id)
);